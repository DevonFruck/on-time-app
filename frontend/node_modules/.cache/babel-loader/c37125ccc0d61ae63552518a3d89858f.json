{"ast":null,"code":"var _jsxFileName = \"D:\\\\Git\\\\hours-fe\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [usersTasks, setUsersTasks] = useState({});\n  const [myTasks, setMyTasks] = useState(null);\n  const [count, setCount] = useState(0);\n  useEffect(() => {\n    console.log('hi');\n    setMyTasks([{\n      name: \"Devon\",\n      tasks: [{\n        \"taskName\": \"mow the grass\",\n        \"isComplete\": false\n      }, {\n        \"taskName\": \"eat some tea\",\n        \"isComplete\": true\n      }, {\n        \"taskName\": \"cry\",\n        \"isComplete\": false\n      }]\n    }]);\n  }, []);\n  useEffect(() => {\n    console.log(myTasks);\n  }, [myTasks]); //setMyTasks(42)\n  // setMyTasks([\n  //     {\n  //         \"Devon\": [{\n  //                 \"taskName\": \"mow the grass\",\n  //                 \"isComplete\": false\n  //             },\n  //             {\n  //                 \"taskName\": \"eat some tea\",\n  //                 \"isComplete\": true\n  //             },\n  //             {\n  //                 \"taskName\": \"cry\",\n  //                 \"isComplete\": false\n  //             }\n  //         ]\n  //     }\n  // ])\n  //var myName = Object.keys(myTasks);\n  //console.log(myName)\n  //let myName = 'Devon'\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: myTasks == null ? null : myTasks[0].name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), myTasks == null ? null : myTasks[0].tasks.map(task => {\n      /*#__PURE__*/\n      _jsxDEV(\"p\", {\n        children: task.taskName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"HCd7hirUqR7MmA8g1WJsRh7ZhQA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","logo","App","usersTasks","setUsersTasks","myTasks","setMyTasks","count","setCount","console","log","name","tasks","map","task","taskName"],"sources":["D:/Git/hours-fe/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\n\nfunction App() {\n    const [usersTasks, setUsersTasks] = useState({});\n    const [myTasks, setMyTasks] = useState(null);\n    const [count, setCount] = useState(0);\n\n    useEffect(() => {\n        console.log('hi')\n        setMyTasks([\n            {\n                name: \"Devon\",\n                tasks: [\n                    {\n                        \"taskName\": \"mow the grass\",\n                        \"isComplete\": false\n                    },\n                    {\n                        \"taskName\": \"eat some tea\",\n                        \"isComplete\": true\n                    },\n                    {\n                        \"taskName\": \"cry\",\n                        \"isComplete\": false\n                    }\n                ]\n            }\n        ])\n    }, [])\n\n    useEffect(() => {\n        console.log(myTasks)\n    }, [myTasks])\n\n    \n\n    //setMyTasks(42)\n    // setMyTasks([\n    //     {\n    //         \"Devon\": [{\n    //                 \"taskName\": \"mow the grass\",\n    //                 \"isComplete\": false\n    //             },\n    //             {\n    //                 \"taskName\": \"eat some tea\",\n    //                 \"isComplete\": true\n    //             },\n    //             {\n    //                 \"taskName\": \"cry\",\n    //                 \"isComplete\": false\n    //             }\n    //         ]\n    //     }\n    // ])\n\n    //var myName = Object.keys(myTasks);\n    //console.log(myName)\n    //let myName = 'Devon'\n    return (\n        <div className=\"App\">\n            <p>\n                { myTasks == null ? null : myTasks[0].name}\n            </p>\n\n            {   myTasks == null ? null : \n                myTasks[0].tasks.map((task) => {\n                    <p>\n                        {task.taskName}\n                    </p>\n                })\n            }\n            \n            \n        </div>\n    );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,WAAP;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,EAAD,CAA5C;EACA,MAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAC,IAAD,CAAtC;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,CAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAR,CAAY,IAAZ;IACAJ,UAAU,CAAC,CACP;MACIK,IAAI,EAAE,OADV;MAEIC,KAAK,EAAE,CACH;QACI,YAAY,eADhB;QAEI,cAAc;MAFlB,CADG,EAKH;QACI,YAAY,cADhB;QAEI,cAAc;MAFlB,CALG,EASH;QACI,YAAY,KADhB;QAEI,cAAc;MAFlB,CATG;IAFX,CADO,CAAD,CAAV;EAmBH,CArBQ,EAqBN,EArBM,CAAT;EAuBAb,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAR,CAAYL,OAAZ;EACH,CAFQ,EAEN,CAACA,OAAD,CAFM,CAAT,CA5BW,CAkCX;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;;EACA,oBACI;IAAK,SAAS,EAAC,KAAf;IAAA,wBACI;MAAA,UACMA,OAAO,IAAI,IAAX,GAAkB,IAAlB,GAAyBA,OAAO,CAAC,CAAD,CAAP,CAAWM;IAD1C;MAAA;MAAA;MAAA;IAAA,QADJ,EAKQN,OAAO,IAAI,IAAX,GAAkB,IAAlB,GACAA,OAAO,CAAC,CAAD,CAAP,CAAWO,KAAX,CAAiBC,GAAjB,CAAsBC,IAAD,IAAU;MAC3B;MAAA;QAAA,UACKA,IAAI,CAACC;MADV;QAAA;QAAA;QAAA;MAAA;IAGH,CAJD,CANR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAiBH;;GAzEQb,G;;KAAAA,G;AA2ET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}